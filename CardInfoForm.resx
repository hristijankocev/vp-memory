<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAICAAAAEAIACoEAAAFgAAACgAAAAgAAAAQAAAAAEAIAAAAAAAABAAABMLAAATCwAAAAAAAAAA
        AACWxur/W5ja/0yDyP9Phsv/O3HC/zBkuP8+dsT/TYjS/1KJy/9RiM3/T4nP/0mCyf9Gg9P/SYTO/0t+
        wP9DfMr/SIbS/0WH0f9XmNf/Z5vU/1+Rzv9QhMn/RnzB/z92wf87dMT/O3C+/zdyxf9EfMT/WZDT/2KU
        0P9wpNn/lsfs/1KX5f8XMm//Eg8g/xIVMP8VFi//FRUo/xYcOv8WIUv/EQ4k/xITJP8TFS7/FRw9/xck
        TP8YKlj/Gjln/xYaQf8TGTf/FBkv/xgwVv8XQIL/KChA/1JVaf9nbYn/eICh/2Zynf9scZT/ZXKZ/11o
        lv9aXX3/QEtr/xYxdv9npOf/TJDj/xsuY/8VDhb/FhQg/xYUI/8WEyP/FhUk/xkrQ/8bLlD/FREW/xcW
        Kf8YGy//GSZF/xcZL/8WFiH/FRId/xcUJP8ZHzX/GB87/x0oPv9YYJ7/V2DF/1lizv+Mkd3/ZXDV/2py
        0/9ocM//h5jj/1piw/9dcMb/MEB5/06M2P9ZnOb/GzFj/xUOFv8VEyH/FA0Z/xUTIP8VFSP/Gy9h/xom
        Vv8WFyf/GB87/xUXKv8VFCP/FRUh/xgfN/8XGjf/Fxs0/xcYLv8YFSn/Eg4i/0JUkf9nc/v/Ulr1/3aD
        //9yfOv/YV/1/4iN/f+Ai/P/Ulj9/2Vluf8aH0D/RoTZ/1yc5P8aMGn/EwgM/xggPv8cPGf/FQ8a/xcc
        Lv8ZL0z/FhEr/xQPF/8VEyP/Fxsr/xoyTv8cR2//GSdH/xUSIv8VEh//FxYm/xgdMv8VFSj/GBgm/ycn
        Nv8uME//aXWd/32dzP97n+b/fKDr/05xrv8kLmX/Kztz/x1Chf8+ds3/VJbf/x09hP8XGjD/HDtl/yJe
        rv8VDhz/GCY+/xkjRf8WEiX/GSdI/xgjS/8cOGb/GzJa/xYUI/8VDxr/FRQj/xYUJv8YGzL/GyhI/xkb
        OP8XGTL/ExYu/xIQHv8PCBT/Ex45/xpNjv8gaaX/IWOw/xotVf8aJlb/KGzF/z540f8/gNn/HTZu/xki
        P/8fL27/Hz6A/xUMFf8aKVL/Gy5T/xcTJf8aJkT/GS1T/xYZLP8VDhb/FhUj/xYXKP8WFCX/FhYm/xgY
        KP8YFib/GBkq/xgZLP8aHjf/GiA9/xkcNP8YFir/HzVe/x8/cv8eOF//IUF6/xgRKf8ePG//Q4Pb/zRx
        zf8cMWf/Gzhe/x1NiP8cP2H/Fg4a/xkcP/8XHDL/FhIf/xcbNf8VFSD/FhEa/xcYKf8WFCL/FhUg/xca
        Kf8dL0j/HSlO/xoePf8aITz/GiI//xkePP8YGC7/GBkq/xYUKP8YGy3/HT9n/xskRf8WDBn/Ghw6/xom
        XP9Sjtr/OnrW/xopXf8ZKkb/IlSN/xkeQP8WEyT/Gx9J/xcZLf8XHDL/FhUm/xUSG/8ZHzb/FhQh/xUS
        Gv8XGCf/Fxki/xcWIv8WEx7/FhIa/xUTF/8XGCX/GBox/xkePP8YGzj/FhYo/xcYLP8XFCH/HjVS/x01
        Xf8UDBT/GSZW/1qV3/85e9j/Gi5c/xsdRP8kT4//GiRN/xcZKv8WFif/Fxko/xgfLv8VEBf/GytE/xca
        KP8XFR7/GBoy/xcTG/8WERb/FBAS/xQRFf8WFB7/FhIZ/xURFv8YGCT/FQ8W/xUTIv8ZGjT/GRku/xkb
        NP8WDh//GjFP/xspUv8XH0H/VpLf/zp71/8bL2H/HT1m/yBVlP8bJ0P/GBwv/xUTHv8XGC//FREc/xkg
        Nf8ZITH/FA8T/xonR/8VFSH/FREV/xQSGP8VEhf/FRMY/xYTGP8VExf/FRMY/x0wQ/8cKUP/FxUm/xkb
        Ov8ZHDP/GRYt/xslSP8XFyT/HB1D/x0ra/9Rjtz/OXfQ/yFKlv8iVJf/IEOK/xgXKP8YGzn/Fhgp/xgj
        O/8VFiX/GR8y/xYTF/8WGCb/FBIY/xQPD/8UERP/Ew8Q/xMPEP8UEBH/FBAS/xUSFv8WExf/FQ8T/xkg
        M/8aJUD/IkmE/x0uU/8XFij/GiA//x0sVf8WDhj/HS9r/0SD2P82ddL/Hjh3/x48dv8gTI3/FxMk/xYU
        I/8YHi//Hzxb/xYWIv8XFh3/Fxgf/xYUGv8UEBH/FBES/xQQEf8TEBH/FBAS/xQREv8UEBD/FRQa/xcW
        H/8VEhX/FREU/xomMP8cLVX/GR82/xkbMf8YFyv/HClV/xcSJf8ZJEX/OnjR/zZyzv8bLWb/Hkd+/x9P
        h/8XEib/FQ8X/xgkO/8aLFD/FhEX/xYUGP8WFiL/FhQe/xQQEP8TEBH/FBES/xQQEf8TEBH/FBAR/xQQ
        Ef8TDw//FRQa/xUVHf8VERT/FRMZ/x40V/8XGir/GBgx/xcVKP8dLlL/GRs3/xkfQP8zasT/PXTJ/yBH
        if8gWZv/HDdm/xgZMP8ZHDf/GyxK/xwrSv8XFhn/FhEU/xccJv8VFhz/Ew4O/xMQEf8UERL/ExAR/xMQ
        Ef8UEBH/FBAR/xQQEv8UDw//FhYe/xcWHv8VDxH/GiI1/x4tTP8ZHTr/GBov/xslQP8eMFv/GSJI/zly
        zP9Ihtb/Hz99/yNYlv8eLlf/Gh01/x43Vf8bKkb/GiQ7/xcVHP8WEhX/Fxkh/xUUGP8UDxD/FBES/xQQ
        Ev8TEBH/FBAR/xQQEv8UEBL/FBES/xUREv8VEhT/Fxkl/xYSFf8WFCH/GiRG/xsiOf8XFyb/GB02/x0w
        Yv8bNGv/VJDe/02O4P8dM27/Gx9N/xwqUv8bKUX/FhMc/xcZLP8ZIjf/FxUi/xYTFv8VExj/FRIV/xQQ
        Ef8UEBH/FBAR/xQQEf8TEBH/FBAS/xQREv8UEBH/FBES/xQQEf8XFx7/FxQY/xkcJ/8aHT3/FxYp/xYW
        LP8aHjz/HCpS/xw2fv9lnuL/S4/h/xs1b/8XFCj/GRw6/xstUP8VDxr/FRci/xghNP8YITL/FRET/xYT
        GP8VEhT/FBAR/xMQEf8UEBH/ExAR/xMPEf8UERL/FBAS/xQQEv8UERL/FRET/xUVG/8VEhX/GiEv/xwq
        Uv8aI1D/GRo4/xkdN/8bKUf/HDRv/1KP3v9aneP/H0KS/xgXMf8YFy7/GyI+/xYWJv8YHjP/Fxsq/xso
        P/8aHyv/FhIV/xQTFv8TEBH/FBAS/xMQEf8TEBH/FBAS/xQREv8UERL/FBES/xQREv8VEhT/FhYg/xMP
        Ev8bKT3/IDlk/xkbNf8aJD7/Gh02/x02Uf8bOWr/T4zb/1eZ3f8jVqP/IEl3/xgWLv8ZGDH/GRw1/xYS
        Hf8XExv/GBgn/x4wTf8XGh//FRIV/xQQEv8UEBL/FBAS/xQQEv8VERL/FBAS/xQQEv8UEBH/FRET/xUS
        FP8XFyP/FRAW/x4uUP8fOGT/EwwK/xgbN/8bJj//GjBT/xs3ZP9Litz/VZni/x46c/8iVIP/Gy5P/xgY
        MP8ZGjT/FxUn/xYTGf8XFiH/GBor/xspPv8XGyf/FRIV/xQPEP8UEBH/ExAR/xMQEf8TEBH/FBES/xUT
        F/8VEhX/FRIW/xcaKf8XFiH/GiI+/xkhQP8VEBn/Fxsv/xkiQv8YN1n/GShR/0yM3/9Znub/HDRr/xcY
        NP8aJkf/Gi5R/xkcNv8XGC//FhMh/xgXJ/8XFiT/FRUc/xkgLf8ZHir/Fhcg/xQSFv8TEBH/ExAR/xQR
        E/8VFBr/FRMX/xUQE/8ZHSr/GiM1/xcYK/8XFSP/FxQo/xgbMf8YGy7/HS1Z/yBFbP8YIET/SYfd/1mf
        5/8dN3T/Fg8d/xkZN/8ZJEb/GyZO/xgYMP8ZGjT/GRgr/xgYLP8ZIzH/Fxki/xcZI/8YHSf/Fxwr/xUY
        If8VFRv/FRIW/xYSFv8VFBn/GR8v/x81UP8ZHzH/GBgo/xYUH/8VERT/GBwu/xgUKv8gQmf/HjpW/xkh
        Qf87edL/T5fo/x44b/8WDhr/GBcr/xoaM/8aJkb/GypQ/xsfQv8cI0P/HChA/xwpOf8bKT3/GRox/xcU
        G/8WERX/FBAU/xURFf8WFB3/GBsl/xsmO/8fMlH/GiQ6/xgYJf8ZFyf/FhMe/xQNDv8ZFzL/Gh00/x0t
        Tv8cLUD/GSJI/z991/9fo+v/Hzp0/xgbLP8YGC7/FxQk/xkZLv8ZJz//Hjpc/x80V/8eLk3/HjRb/xwk
        Sv8ZGjH/GRox/xskO/8bLT//HChG/xwkQv8cKEL/HShI/xohNP8ZGyb/GyZB/xcTIv8YHTD/HC9R/xoh
        QP8ZHjb/Ghg0/xohPf8ZI0X/Q37V/2er7f8gOnX/GypH/xoiQ/8aHTj/GRUl/xkWKf8bHzT/HSxF/x4z
        Yf8dL13/HCVP/xskRf8cJUD/HSxP/x0rUv8bJEf/HChH/x4qS/8ZGi7/GRox/x0sUv8aIzv/FQ4R/yBF
        Zv8fSW//GRk1/xseOP8aITn/GhYz/x4vYP9Hg9f/Yarv/x86c/8WFSb/GiBA/xsnSP8cJkf/Gh0x/x4p
        Tv8gMln/GyA3/xskQ/8aIT7/GyI//xwjPf8bHjr/Ghs2/xobNf8cI0P/GyE6/xwjQf8hNmH/Gxs3/xoY
        Pf8bHjn/Ghsx/xoXM/8aGjj/GRgu/xsgOf8ZFCX/Gipb/0+N3f9NmOr/Hjly/xcOGv8bIDb/HCpI/x8v
        XP8fLk7/HytF/yljpv8mUY7/GRkw/xobMv8bIjf/Gx44/xseOf8aIzj/Gh40/xoYMP8aGjX/HCJD/xkY
        I/8XFhv/GRov/xoaO/8aGjL/HTVS/xoeOP8ZHDX/GyI//xkVJP8ZJ0//TYzd/0aM4v8gPXn/FBMn/xAO
        H/8QCx7/FzNi/xxOef8ZLVv/FiNL/yNMiP8pYp7/H0Bj/x0wVv8eNGD/GylJ/xgdNf8aHjr/GiJB/xcV
        H/8XEh//GRk4/xkfO/8XGSz/GCpC/xkaNf8fOXj/GBkw/x04XP8bLU//Fw4T/xklS/9Kh9j/UJbo/x01
        bf80OVH/PTpM/zxDXf9AS2r/Pkda/0ZQg/8/WIb/JD9y/yVSgP8od7H/IUiE/x4vWf8dKUb/GylL/yI7
        b/8eNWD/Fwwd/x41Vf8bJkf/FxAY/xogPv8ZIEH/GyI8/xsqSv8cKk//IDt0/x0tWf8XDhj/GCRK/0WB
        1f9coen/H1Ge/1yAov9pd5L/ZmFs/2Bqev9jcYz/cXiT/1VYaf8aGzX/Fgse/xkdOv8aKlT/GidG/xsj
        Qv8ZHDj/FhYp/xUMG/8eNmX/GSZK/xYTJf8WFCn/GiE7/x86Yv8ZKVL/FA0i/xghPv8cRHb/ID1//xkW
        MP8UIk//SIfa/3246f9Ihtf/L2S1/y5ltv8oWJ7/KVmg/ypcpv8nWaX/Kleg/zdnsP82Z63/NGSs/0Bx
        uP89b7n/M2Ot/zViqv85aLH/Omqu/0KB0f9Adb3/PnCt/zpsrf85b7j/P4jU/z1ts/9Dc7j/QnO3/z9z
        u/9Efc7/Q3S+/0F5w/93sen/AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA=
</value>
  </data>
</root>